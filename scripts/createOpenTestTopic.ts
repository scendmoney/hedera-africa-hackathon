// scripts/createOpenTestTopic.ts
require('dotenv').config({ path: '.env.local' })
const { Client, PrivateKey, TopicCreateTransaction } = require('@hashgraph/sdk')

;(async () => {
  const operatorId = process.env.HEDERA_OPERATOR_ID
  const operatorKey = process.env.HEDERA_OPERATOR_KEY
  const network = process.env.HEDERA_NETWORK ?? 'testnet'
  
  if (!operatorId || !operatorKey) {
    console.error('Missing HEDERA_OPERATOR_ID or HEDERA_OPERATOR_KEY')
    process.exit(1)
  }
  
  console.log(`Creating open topic on ${network} with operator ${operatorId}`)
  console.log(`Key length: ${operatorKey.length} chars`)
  
  try {
    const client = Client.forName(network)
    const privateKey = PrivateKey.fromString(operatorKey)
    console.log(`Public key: ${privateKey.publicKey.toStringDer()}`)
    
    client.setOperator(operatorId, privateKey)

    // Create open topic: NO submitKey or adminKey = anyone can submit
    console.log('Creating open topic...')
    const tx = await new TopicCreateTransaction()
      .setTopicMemo('Test Open Topic - No Submit Key')
      .execute(client)

    const rcpt = await tx.getReceipt(client)
    const topicId = rcpt.topicId?.toString()

    console.log(`✅ Open Test Topic ID: ${topicId}`)
    console.log(`Explorer: https://hashscan.io/testnet/topic/${topicId}`)
    console.log(`\nTo test, use this topic ID in your submit route.`)

    client.close()
  } catch (error: any) {
    console.error(`❌ Failed to create open topic:`, error.message)
    console.error('Status:', error.status)
    if (error.transactionId) {
      console.error('Transaction ID:', error.transactionId.toString())
    }
    process.exit(1)
  }
})().catch(e => { 
  console.error('Unexpected error:', e)
  process.exit(1)
})